#!/bin/bash
set -eu

#
# REFERENCES:
# - https://www.collabora.com/news-and-blog/blog/2017/01/16/setting-up-qemu-kvm-for-kernel-development/
# - https://www.collabora.com/news-and-blog/blog/2017/03/13/kernel-debugging-with-qemu-overview-tools-available/
#

function print_usage {
	echo "Usage: $(basename $0) <path/to/kernel/image> [options]"
	echo "	Options:"
	echo "		--arch [arch]: x86_64(default)|i386|aarch64|arm"
	echo "		-h|--help: print this help message"
}

ARCH=x86_64

SHORTOPTS="h"
LONGOPTS="arch:,help"

ARGS==`getopt -n "$(basename $0)" --options $SHORTOPTS --longoptions $LONGOPTS -- "$@"`

eval set -- "$ARGS"

while true;
do
	case "$1" in
		-h|--help)
			print_usage
			exit 0
			;;

		--arch)
			shift
			ARCH="$1"
			;;

		--)
			shift
			break
			;;
	esac
	shift
done

if [ $# -ne 1 ]; then
	print_usage
	exit -1
fi

KERNEL=$1

# Information required by plumbing layer
IMG=${IMG:-$(dirname $(realpath $0))/images/qemu-image-$ARCH.img}

if [[ "$ARCH" == "x86_64" || "$ARCH" == "i386" ]]; then
	ARCH_OPTS="					\
		-drive file=$IMG,format=raw,file.locking=off \
		--enable-kvm"
	CMD_LINE="root=/dev/sda console=ttyS0"
elif [[ "$ARCH" == "aarch64" ]]; then
	ARCH_OPTS="				\
		-drive file=$IMG,format=raw,file.locking=off \
		-cpu cortex-a53			\
		-machine virt"
	CMD_LINE="root=/dev/vda"
elif [[ "$ARCH" == "arm" ]]; then
	ARCH_OPTS="				\
		-drive if=none,file=$IMG,format=raw,id=hd \
		-device virtio-blk-device,drive=hd	\
		-cpu cortex-a15			\
		-machine virt"
	CMD_LINE="root=/dev/vda"
else
	echo "ERROR: unknown arch $ARCH"
	exit -1
fi

set -x
sudo qemu-system-$ARCH				\
	-kernel $KERNEL				\
	-s \
	-append "$CMD_LINE"			\
	-smp cores=6,threads=2			\
	--nographic				\
	-m 1024					\
	-net nic -net user,hostfwd=tcp::10022-:22 \
	$ARCH_OPTS
